{"version":3,"sources":["logo.svg","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","react_default","a","createElement","className","placeholder","onChange","name","ref","onClick","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","ai_index_esm","ti_index_esm","index_esm","TodoList","setTodos","newTodos","concat","toConsumableArray","updateTodos","console","log","removeArr","filter","todoId","newValue","prev","item","App","components_TodoList","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8f8e0d30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"todo-form\">\r\n      {props.edit ? (\r\n        <div>\r\n          <input\r\n            placeholder=\"Update your item\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input edit\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button edit\">\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input\"\r\n          />\r\n          <button onClick={handleSubmit} className=\"todo-button\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\r\n\r\nexport default function Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: '',\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n      <div key={todo.id}>{todo.text}</div>\r\n\r\n      <div className=\"icon\">\r\n        <AiOutlineCheckCircle className=\"complete-icon\" onClick={() => completeTodo(todo.id)} />\r\n        <TiEdit className=\"edit-icon\" onClick={() => setEdit({ id: todo.id, value: todo.text })} />\r\n        <RiCloseCircleLine className=\"del-icon\" onClick={() => removeTodo(todo.id)} />\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (todo.text) {\r\n      const newTodos = [todo, ...todos];\r\n\r\n      setTodos(newTodos);\r\n    }\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updateTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n        console.log(todo.isComplete);\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updateTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    setTodos((prev) => prev.map((item) => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Todo App</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}